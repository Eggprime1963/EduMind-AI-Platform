# Docker-specific Spring Boot Configuration
spring.profiles.active=docker

# Server Configuration
server.port=8080
server.servlet.context-path=/

# Database Configuration for Docker
spring.datasource.url=jdbc:mysql://${DB_HOST:mysql}:${DB_PORT:3306}/${DB_NAME:learning_management}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=${DB_USER:edumind_user}
spring.datasource.password=${DB_PASSWORD:edumind_password}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Connection Pool Optimization for Docker
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=false

# Logging Configuration for Docker
logging.level.root=INFO
logging.level.tech.nguyenstudy0504.learningplatform=DEBUG
logging.level.org.springframework.security=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always

# AI Configuration
gemini.api.key=${GEMINI_API_KEY:}
ollama.api.url=${OLLAMA_BASE_URL:http://host.docker.internal:11434/api/generate}
ai.priority=${AI_PRIORITY:gemini-first}

# VNPay Configuration
vnpay.tmn.code=${VNPAY_TMN_CODE:}
vnpay.secret.key=${VNPAY_SECRET_KEY:}
vnpay.return.url=${VNPAY_RETURN_URL:http://localhost:8080/payment/return}

# Security Configuration
jwt.secret=${JWT_SECRET:docker-secret-key}
jwt.expiration=86400000

# CORS Configuration for Docker
spring.web.cors.allowed-origins=http://localhost:3000,http://localhost:8080
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
